apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: flask-app-hpa
  namespace: flask-app
  labels:
    app: flask-app
  annotations:
    description: "Horizontal Pod Autoscaler for Flask application"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flask-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: flask-app-pdb
  namespace: flask-app
  labels:
    app: flask-app
  annotations:
    description: "Pod Disruption Budget for Flask application"
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: flask-app

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-app-config
  namespace: flask-app
  labels:
    app: flask-app
  annotations:
    description: "Configuration for Flask application"
data:
  FLASK_ENV: "production"
  FLASK_DEBUG: "false"
  FLASK_HOST: "0.0.0.0"
  FLASK_PORT: "5000"
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"